{"version":3,"sources":["../../src/pages/rfid/rfid.module.ts","../../src/pages/rfid/rfid.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RFIDPage } from \"./rfid\";\nimport { IonicPageModule } from \"ionic-angular\";\n\n\n@NgModule({\n    declarations: [\n      RFIDPage\n    ],\n    imports: [\n      IonicPageModule.forChild(RFIDPage)\n    ],\n    entryComponents: [\n      RFIDPage\n    ]\n})\nexport class RFIDPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/rfid/rfid.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, ToastController, ModalController, MenuController } from 'ionic-angular';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\n\nimport 'rxjs/add/operator/do';\nimport { Toast } from 'ionic-angular/components/toast/toast';\nimport { RFIDService } from '../../app/core/store/rfid/rfid.service';\nimport { RFIDObject, RFIDMode } from '../../app/core/store/rfid/rfid.model';\n\nimport * as fromRFID from '../../app/core/store/rfid';\nimport * as rfid from '../../app/core/store/rfid/rfid.actions';\nimport { Song } from '../../app/core/store/songs/song.model';\nimport { Modal } from 'ionic-angular/components/modal/modal';\nimport { SearchPage } from '../search/search';\n\n\n@IonicPage({\n  name: 'rfid'\n})\n@Component({\n  selector: 'page-rfid',\n  templateUrl: 'rfid.html'\n})\nexport class RFIDPage {\n  public rfidObjectFound$: Observable<RFIDObject>;\n  public rfidMode$: Observable<string>;\n  public rfidObjectIsDirty$: Observable<boolean>;\n\n  public saveToast: Toast = this.toastCtrl.create({\n    message: 'RFID Object Saved Successfully!',\n    duration: 3000,\n    position: 'top'\n  });\n\n  public searchModal: Modal = this.modalCtrl.create(SearchPage);\n\n  constructor(\n    public navCtrl: NavController,\n    private toastCtrl: ToastController,\n    private rfidService: RFIDService,\n    private rfidStore: Store<fromRFID.State>,\n    private modalCtrl: ModalController,\n    private menuCtrl: MenuController\n  ) {\n    menuCtrl.enable(true);\n\n    this.rfidObjectFound$ = this.rfidStore.select(fromRFID.getSelectedRFIDObject);\n    this.rfidMode$ = this.rfidStore.select(fromRFID.getMode);\n    this.rfidObjectIsDirty$ = this.rfidStore.select(fromRFID.getDirty);\n\n    this.rfidService.rfidObjectSaved$\n      .subscribe(() => {\n        this.saveToast.present();\n      });\n  }\n\n  ionViewDidEnter() {}\n\n  ngOnDestroy() {\n    this.rfidStore.dispatch(new rfid.SetMode('get'));\n  }\n\n  public addSongs() {\n    this.searchModal.present();\n  }\n\n  public removeSongFromList(id: string) {\n    this.rfidStore.dispatch(new rfid.RemoveSong(id));\n  }\n\n  public setRFIDMode(mode: RFIDMode) {\n    this.rfidStore.dispatch(new rfid.SetMode(mode));\n  }\n\n  public saveRFIDTrackList() {\n    this.rfidStore.dispatch(new rfid.Save());\n  }\n\n  public clearTrackList() {\n    this.rfidStore.dispatch(new rfid.ClearList());\n  }\n\n  public toggleShuffle() {\n    console.log('Shuffled!');\n    this.rfidStore.dispatch(new rfid.ToggleShuffle());\n  }\n\n  public toggleLoop() {\n    this.rfidStore.dispatch(new rfid.ToggleLoop());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/rfid/rfid.ts"],"sourceRoot":""}